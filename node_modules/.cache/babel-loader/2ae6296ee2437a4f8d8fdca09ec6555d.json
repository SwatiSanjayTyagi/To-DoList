{"ast":null,"code":"var _jsxFileName = \"C:\\\\Digikull\\\\ReactToDoList\\\\src\\\\Components\\\\InputForm.js\";\nimport React, { Component } from 'react';\nimport ArrayDisplay from '../Components/ArrayDisplay';\n\nclass InputForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = item => {\n      console.log('in delete function');\n      this.setState({\n        taskList: [...this.state.taskList.slice(0, item), ...this.state.taskList.slice(item + 1)]\n      });\n    };\n\n    this.handleUpdate = (index, flag) => {\n      console.log('in update array function');\n      this.setState({\n        taskList: this.state.taskList.map((newArr, ind) => {\n          if (index == ind) {\n            console.log('inside if condition');\n            console.log(this.props.Displaylt);\n            console.log(newArr);\n            return { ...newArr,\n              arrcheck: !newArr.arrcheck\n            };\n          }\n\n          return newArr;\n        })\n      });\n      console.log(this.state.newArr);\n    };\n\n    this.state = {\n      task: '',\n      taskDesc: '',\n      dtpicker: '',\n      taskList: []\n    };\n  }\n\n  render() {\n    const {\n      task,\n      taskDesc,\n      taskDate,\n      val\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: task,\n      placeholder: \"Task\",\n      onChange: event => this.setState({\n        task: event.target.value\n      }),\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: taskDesc,\n      placeholder: \"Task Description\",\n      onChange: event => this.setState({\n        taskDesc: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      value: taskDate,\n      onChange: event => this.setState({\n        taskDate: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Add Task\",\n      id: \"AddBtn\",\n      onClick: event => {\n        this.setState({\n          taskList: [...this.state.taskList, {\n            arrtask: this.state.task,\n            arrtaskdesc: this.state.taskDesc,\n            arrdate: this.state.taskDate,\n            arrcheck: 'false'\n          }],\n          task: '',\n          taskDesc: '',\n          taskDate: 'dd/mm/yyyy'\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ArrayDisplay, {\n      Displaylt: this.state.taskList,\n      deleteMe: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), console.log(this.state.taskList));\n  }\n\n}\n\nexport default InputForm;","map":{"version":3,"sources":["C:/Digikull/ReactToDoList/src/Components/InputForm.js"],"names":["React","Component","ArrayDisplay","InputForm","constructor","props","handleDelete","item","console","log","setState","taskList","state","slice","handleUpdate","index","flag","map","newArr","ind","Displaylt","arrcheck","task","taskDesc","dtpicker","render","taskDate","val","event","target","value","arrtask","arrtaskdesc","arrdate"],"mappings":"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","sourcesContent":["import React , { Component } from 'react'\r\nimport ArrayDisplay from '../Components/ArrayDisplay'\r\n\r\nclass InputForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            task:'',\r\n            taskDesc:'',\r\n            dtpicker:'',\r\n            taskList:[]\r\n\r\n        }\r\n    }\r\n    handleDelete = (item) => {\r\n        console.log('in delete function')\r\n        this.setState({taskList:[...this.state.taskList.slice(0,item),\r\n            ...this.state.taskList.slice(item+1)]})\r\n    }\r\n    handleUpdate = (index,flag) => {\r\n        console.log('in update array function')\r\n        this.setState({\r\n            taskList: this.state.taskList.map((newArr, ind) =>  {\r\n            if (index == ind)\r\n            {\r\n                console.log('inside if condition')\r\n                console.log(this.props.Displaylt)\r\n                console.log(newArr)\r\n                return{ ...newArr,arrcheck: !newArr.arrcheck}\r\n            }\r\n            return newArr\r\n    }\r\n    )\r\n })\r\n console.log(this.state.newArr)\r\n}\r\n\r\n        render() {\r\n        const {task,taskDesc,taskDate, val} = this.state\r\n        return(\r\n            <div>\r\n                <input type=\"text\" value = {task}  placeholder='Task'\r\n                onChange={(event)=> this.setState({task: event.target.value})} autoFocus/>\r\n                <input type=\"text\"  value = {taskDesc} placeholder='Task Description'\r\n                onChange={(event)=> this.setState({taskDesc: event.target.value})}/>\r\n                <input type=\"date\" value = {taskDate}\r\n                onChange={(event)=> this.setState({taskDate: event.target.value})}  />\r\n                <input type=\"button\" value =\"Add Task\" id=\"AddBtn\"\r\n                onClick ={(event)=> {this.setState({taskList: [\r\n                    ...this.state.taskList,\r\n                    {arrtask: this.state.task ,\r\n                    arrtaskdesc: this.state.taskDesc,\r\n                    arrdate: this.state.taskDate,\r\n                    arrcheck: 'false'}\r\n                    ],\r\n                    task:'', taskDesc:'',taskDate: 'dd/mm/yyyy'})} } />\r\n\r\n                <ArrayDisplay Displaylt = {this.state.taskList}  deleteMe= {this.handleDelete} />\r\n\r\n                {console.log(this.state.taskList)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputForm"]},"metadata":{},"sourceType":"module"}